apiVersion: v1
kind: Namespace
metadata:
  name: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nextflow
  namespace: ${NAMESPACE}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nextflowscheduleraccount
  namespace: ${NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nextflow-runner
  namespace: ${NAMESPACE}
rules:
  - apiGroups: [""]
    resources: ["pods","pods/log","services","configmaps","persistentvolumeclaims"]
    verbs: ["create","get","list","watch","delete","patch"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["create","get","list","watch","delete","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cws-scheduler
rules:
  - apiGroups: [""]
    resources: ["pods","pods/log","services","configmaps"]
    verbs: ["create","get","list","watch","delete","patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get","list","watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nextflow-runner-binding
  namespace: ${NAMESPACE}
subjects:
  - kind: ServiceAccount
    name: nextflow
    namespace: ${NAMESPACE}
roleRef:
  kind: Role
  name: nextflow-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cws-scheduler-binding
subjects:
  - kind: ServiceAccount
    name: nextflowscheduleraccount
    namespace: ${NAMESPACE}
roleRef:
  kind: ClusterRole
  name: cws-scheduler
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nextflow-work-pvc
  namespace: ${NAMESPACE}
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 20Gi
  # storageClassName: standard   # uncomment & set if needed

